<!DOCTYPE html>
<html>
<head>
<title>Plink Connect for Disk Checks</title>
<meta charset="utf-8" />
<!--<meta http-equiv="x-ua-compatible" content="ie=edge" />-->
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<hta:application 
   id="plinkApp"
   applicationName="directoryChecks"
   border="thick"
   borderStyle="sunken"
   caption="yes"
   contextMenu="yes"
   icon=""
   innerBorder="yes"
   maximizeButton="yes"
   minimizeButton="yes"
   navigable="no"
   scroll="yes"
   scrollFlat="no"
   selection="yes"
   showInTaskBar="yes"
   singleInstance="yes"
   sysMenu="yes"
   version="1.0"
   windowState="normal"
 />

<script type="text/javascript"  language="javascript">
  function Set(){   // this limits the size of the window opened and positions it
    var l=(screen.width/2 - 1030/2); // centre - half the window width
    var t=(screen.height/5); // where you want it vertically
    self.moveTo(l,t);
    self.resizeTo('1030',screen.height/2); // as you can see, this example opens a longish but squat window, near the task-bar
  }  
</script> 
 
</head>
<body onload="Set()">
<table width="50%" border=1>
<tr><td colspan=2>List of servers to connect through Plink. <br>If using name, make sure name to IP mapping is functioning correctly.</td></tr>
<tr><td rowspan=2><TEXTAREA style="Height:80px;font-Size:12;font-weight:normal;";TITLE=""; id="textAreaListServers"; WRAP=hard>
192.168.11.100
192.168.11.100</TEXTAREA></td>
<td>Username <input type="text" id="strUser" style="width:260px;background-color:#f48942" ></td></tr>
<tr><td>Password <input type="password" id="strPassword" style="width:260px;background-color:#f48942" ></td></tr>
</table>

	<script type="text/javascript" language="javascript">
	 <!--
	 
		//ver = ScriptEngine() + ' V ';
		//ver += ScriptEngineMajorVersion() + '.';
		//ver += ScriptEngineMinorVersion() + '.';
		//ver += ScriptEngineBuildVersion();
		//document.write(ver + '<br>');	   
		//document.write("Name: " + plinkApp.applicationName + "<br>"); 
		//document.write("Border: " + plinkApp.border + "<br>");
		//document.write("Border style: " + plinkApp.borderStyle + "<br>");
		//document.write("Caption: " + plinkApp.caption + "<br>");
		//document.write("Context menu: " + plinkApp.contextMenu + "<br>");
		//document.write("Command line: " + plinkApp.commandLine + "<br>");
		//document.write("Icon: " + plinkApp.icon + "<br>");
		//document.write("Inner border: " + plinkApp.innerBorder + "<br>");
		//document.write("Maximize button: " + plinkApp.maximizeButton + "<br>"); 
		//document.write("Minimize button: " + plinkApp.minimizeButton + "<br>"); 
		//document.write("Navigable: " + plinkApp.navigable + "<br>");
		//document.write("Scroll: " + plinkApp.scroll + "<br>"); 
		//document.write("Flat scrollbar: " + plinkApp.scrollFlat + "<br>");
		//document.write("Allow selection: " + plinkApp.selection + "<br>"); 
		//document.write("Show in task bar: " + plinkApp.showInTaskBar + "<br>");
		//document.write("Allow only single instance: " + plinkApp.singleInstance + "<br>");
		//document.write("System menu: " + plinkApp.sysMenu + "<br>");
		//document.write("Version: " + plinkApp.version + "<br>");
		//document.write("Window state: " + plinkApp.windowState + "<br>");

	   
		var gFile = '';   // Global
		var gpath = '';  // Global - set this prior to calling the function, eg, "C:\\Folder01\\Folder02\\mydata.txt"   
		var outputFile;
		inputFile = '.\\df-h-copy.txt';
	   
		objFSO = new ActiveXObject("Scripting.FileSystemObject");
		ForWriting = 2;
		ForReading = 1;
		ForAppending = 8;
		CreateIt = true;
		dontWantCreateIt = false;
		AsciiMode = 0;  
		UnicodeMode = -1;
		systemDefaultMode = -2;
		var i;
		var j;
		
		// Use ListFile thus:
		var dating = new Date();
		var newDating = (dating.getFullYear() + dating.getMonth() + dating.getDate() + "_" + dating.getHours() + dating.getMinutes() + dating.getSeconds());
		var tArr=new Array();	
		//fileArray = ListFile('.\\input');
		//ProcessFile('.\\input',fileArray);
		
		// sort tArr with SortIt(tArr)	 
		//var FileDate=Date.parse(objFSO.GetFile(gpath).DateLastModified); // get Last Modified Date of a file			
		//alert (FileDate);
		
		//ListFile(gpath,tArr,'txt'); // List the .csv files, for instance
		// The ListFile function is helpful if you want to have an array of file-names or last-modified dates, etc:
		function ListFile(thePath){  // Builds an array of found file-names in thePath folder.
			var filName='.txt';
				if(thePath.length>0 && objFSO.FolderExists(thePath)){
				var foldName=objFSO.GetFolder(thePath);
				var eNum=new Enumerator(foldName.Files);
					for(i=0;!eNum.atEnd();eNum.moveNext()){
						if((filName==".txt")||(eNum.item().name.slice(0,eNum.item().name.lastIndexOf(".")).toLowerCase().indexOf(filName) > -1)){
							//if((Ext=="*")||(eNum.item().name.slice(eNum.item().name.lastIndexOf(".")+1).toLowerCase().indexOf(Ext)>-1)){
							//tArr[i]=eNum.item().name.slice(0,eNum.item().name.lastIndexOf(".")); // Builds array of file names found
							tArr[i]=eNum.item().name;
							i++;
							//}
						}
					}
				} 
			alert (tArr.length);
			//return tArr;
			
				var select = document.getElementById("file2Process"); 
				var options = tArr; 
				for(i = 0; i < options.length; i++) {
					var opt = options[i];
					var el = document.createElement("option");
					el.textContent = opt;
					el.value = opt;
					select.appendChild(el);
				}			
						
			}
		
		function ProcessFile(thePath,fileArray) {		
			if(objFSO.FolderExists(thePath) && fileArray.length > -1 ) {
				for (j = 0; j < fileArray.length; j++){		
					gFile = objFSO.OpenTextFile(thePath + '\\' + fileArray[j] + '.txt',ForReading,dontWantCreateIt,AsciiMode);
					outputFile = objFSO.OpenTextFile(String('.\\temp\\' + newDating + '.txt'),ForAppending,CreateIt,AsciiMode);
					var tempStringHolder;				
					var pushHolderArray;
					var tempHolder = "";				
					var tempHolderArray =[];
						while (!gFile.AtEndOfStream){ 
							tempStringHolder = "";
							pushHolderArray = [];
							tempHolder = String(gFile.readline());
								if (tempHolder.length != 0){
									tempHolderArray = tempHolder.split(" ");
									if (tempHolderArray[0]!='Filesystem' && tempHolderArray.length > 1){
											for (i = 0; i < tempHolderArray.length; i++){
												if (!( tempHolderArray[i] == "")){
													pushHolderArray.push(tempHolderArray[i]) ;
												} 
											}
											//tempStringHolder = pushHolderArray[0] + ',' +pushHolderArray[pushHolderArray.length-2] + ',' + pushHolderArray[pushHolderArray.length-1];
											tempStringHolder = pushHolderArray.toString();
											//document.write(pushHolderArray.toString() + '<br>');
											outputFile.writeline (fileArray[j] + ',' + tempStringHolder);
									}
								}
						}
					gFile.close();
					outputFile.close();
				}
			}
		}
		 
		function DeleteFile() {
		if (objFSO.FileExists(gpath)) {
		   var afile = objFSO.GetFile(gpath);
		   afile.Attributes[0];
		   afile.Delete();}
		}

		 
		function CopyFile(FromFile,ToFile,overwrite) {  // Set overwrite to true or false; FromFile, etc = full paths
		  var f = objFSO.GetFile(FromFile);
		  f.Attributes[0];
		  f.Copy(ToFile,overwrite);
		}

		 
		function MakeFolder(NewFolderName,DesiredPath){
		  NewFolderName = objFSO.CreateFolder(DesiredPath); // 'DesiredFolderPath' : e.g., "C:\\MainFolder\\NewFolderName". 
		}

		 
		function DeleteFolder(){   // where gpath = full folder path
		  if (objFSO.FolderExists(gpath)) {var afolder = objFSO.GetFolder(gpath); afolder.Delete();}
		}

		 
		function CopyFolder(FromFolder,ToFolder,overwrite) {  // where FromFolder, etc = full folder paths
		  var f = objFSO.GetFolder(FromFolder);
		  f.Copy(ToFolder,overwrite);
		}

		function MainSub(){
			var WshShell = new ActiveXObject("WScript.Shell");
			var listServers = document.getElementById('textAreaListServers').value
			var splitListServers = listServers.split('\n');
			for( i=0; i < splitListServers.length; i++) {
				// Plink to the server
				var ExecOperation = WshShell.Exec('.\\bin\\plink.exe ' + String(splitListServers[i]) + ' -l ' + String(document.getElementById("strUser").value) + ' -pw ' + String(document.getElementById("strPassword").value) + ' -batch -m .\\bin\\df-h.txt');

				// Check the operation's status
				while (ExecOperation.Status == 0){}

				// Get the operation's exit code
				var ExCode = ExecOperation.ExitCode;

				// Get the application's StdOut stream
				var StdOut = ExecOperation.StdOut;

				if (ExCode == 0){
				var plinkResult = StdOut.ReadAll();
				//outputFile = objFSO.OpenTextFile(String('.\\temp\\' + newDating + '.txt'),ForAppending,CreateIt,AsciiMode);
				outputFile = objFSO.OpenTextFile('.\\temp\\' + String(splitListServers[i]) + '_' + newDating + '.txt',ForAppending,CreateIt,AsciiMode);
				outputFile.writeline (plinkResult);
				outputFile.close();
				}				
			}
		}
			
		function jumpToElementsortingValue() {
			//var tempSelected = document.getElementById("showColor").value;
			window.location.hash = '#sortingValue';
		}
		
		function jumpToElementgreenValue(){
			//var tempSelected = document.getElementById("showColor").value;
			window.location.hash = '#greenValue';
		}

				
	 -->
	</script>

<input type="button" style="width:100px;height:25px" value="Connect" onClick="MainSub()" title="Begin connect to servers.">

<br><br>
<hr  align="left" width="50%"></hr> 
<hr  align="left" width="50%"></hr>
<table width="50%" border=0>
<tr><th colspan=3 align=left>List of directories to check disk usage. Choose * to collect all.</th><tr>
<tr><td><input type="radio" id="folderProp" name="folderProp" value="mounted" checked><label for="folderProp">Mounted on</label></td>
<td colspan=2><input type="text" id="folderPropType" value="/var,   /u01,   /u02, /u03, /u04" style="width:95%;"></td><tr>
<tr><td><input type="radio" id="folderProp" name="folderProp" value="filesystem"><label for="folderProp">Filesystem</label></td>
<td colspan=2><input type="text" id="folderPropType" value="/dev/md/dsk/d4,    /dev/md/dsk/d5" style="width:95%;"></td><tr>

<tr><th colspan=3 align=left>Volume percent reporting.</th>
</tr>
<tr><td colspan=3>
<input type="checkbox" name="showColor" id="showColor" onchange="jumpToElementsortingValue()"> <label for="showColor">Show usage color in report.</label>
</td></tr>
<tr><td>Sort by</td><td colspan=2 align=left>
<select name="sortingValue"  id="sortingValue" style='width:170px;' onchange="jumpToElementgreenValue()">
	<option value="" disabled selected>Select
	<option value="default">Default Sorting</option>
	<option value="largeSize">Largest volume</option>
	<option value="smallSize">Smallest volume</option>
</select></td>
</tr>
<tr><td>Under</td><td align=left>	
<select name="greenValue"  id="greenValue">
	<option value="" disabled selected>Select</option>
	<option value="50"> &nbsp 50% </option>
	<option value="55"> &nbsp 55% </option>
	<option value="60"> &nbsp 60% </option>
	<option value="65"> &nbsp 65% </option>
	<option value="70"> &nbsp 70% </option>
	<option value="75"> &nbsp 75% </option>
	<option value="80"> &nbsp 80% </option>
	<option value="85"> &nbsp 85% </option>
	<option value="90"> &nbsp 90% </option>
</select></td><td>is green status. Over percent is red.</td>
</tr>
</table>


<table width="50%" border=0>
<tr><td align=left>
	 
</td><td align=left>
<input type="button" style="width:120px;height:25px" value="List Files" onClick="ListFile('.\\input')" title="Raw files to process.">
</td><td>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</td></tr>
<tr><td align=left>File to process:</td>
<td colspan=2>
<!--<input type="text" id="file2Process" value="C:\Desktop\filename.txt" style="width:95%;" title="Write full folder name.">-->
<select name="file2Process"  id="file2Process" style="width:95%;">
</select>
</td></tr>
<tr><td>&nbsp</td>
<td align=left><input type="button" style="width:120px;height:25px" value="Create Report" onClick="window.location.reload()" title="Generate percentage report."></td>
<td align=left><input type="button" style="width:120px;height:25px" value="Clear Page" onClick="window.location.reload()" title="Clear page to default."></td></tr>
</body>
</html>